generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AddressType {
  SHIPPING
  BILLING
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum NotificationType {
  ORDER
  ALERT
  SYSTEM
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String              @unique
  password           String?
  isGuest            Boolean             @default(false)
  profile            Profile?            @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId          Int?                @unique
  createdAt          DateTime            @default(now())
  role               Role                @default(USER)
  resetOTP           String?
  resetOTPExpiry     DateTime?
  isDeleted          Boolean             @default(false)
  cart               Cart?
  orders             Order[]
  addresses          Address[]
  discountCodes      DiscountCode[]
  notifications      Notification[]
  abandonedCartItems AbandonedCartItem[]
}

model Profile {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  bio       String?
  imageUrl  String?
  user      User?   @relation()
}

model Category {
  id              Int           @id @default(autoincrement())
  sequence_number Int?
  name            String        @unique
  subcategories   Subcategory[]
  products        Product[]
  createdAt       DateTime      @default(now())
  isDeleted       Boolean       @default(false)
  banner          String?
  imageUrl        String?
  publicId        String?
  is_active       Boolean       @default(true)
  seo_title       String?
  seo_description String?
  slug            String?
}

model Subcategory {
  id              Int       @id @default(autoincrement())
  name            String
  sequence_number Int?
  category        Category  @relation(fields: [categoryId], references: [id])
  categoryId      Int
  products        Product[]
  createdAt       DateTime  @default(now())
  isDeleted       Boolean   @default(false)
  banner          String?
  imageUrl        String?
  publicId        String?
  slug            String?

  @@unique([name, categoryId])
}

model Product {
  id                     Int       @id @default(autoincrement())
  isActive               Boolean
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  isDeleted              Boolean
  deletedAt              DateTime? @db.Timestamptz(6)
  name                   String    @db.VarChar(200)
  description            String?
  SKU                    String    @db.VarChar(100)
  basePrice              Decimal   @db.Decimal(7, 2)
  sellingPrice           Decimal   @db.Decimal(7, 2)
  priceDifferencePercent Float
  stock                  Int       @db.SmallInt
  isNewArrival           Boolean
  createdById            Int
  deletedById            Int?
  updatedById            Int
  categoryId             Int
  subcategoryId          Int?

  length         String?  @db.VarChar(15)
  width          String?  @db.VarChar(15)
  weight         String?  @db.VarChar(15)
  height         Decimal?
  slug           String?  @db.VarChar(50)
  sequenceNumber Int?     @db.SmallInt
  seoTitle       String?
  seoKeyword     String?
  seoDescription String?
  productDetails String?

  category           Category               @relation(fields: [categoryId], references: [id])
  subcategory        Subcategory?           @relation(fields: [subcategoryId], references: [id])
  images             ProductImage[]
  variants           ProductVariant[]
  specifications     ProductSpecification[]
  cartItems          CartItem[]
  orderItems         OrderItem[]
  tags               ProductTag[]           @relation("ProductTags")
  abandonedCartItems AbandonedCartItem[]
}

model ProductSpecification {
  id        Int       @id @default(autoincrement())
  isActive  Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean
  deletedAt DateTime? @db.Timestamptz(6)
  name      String    @db.VarChar(30)
  value     String    @db.VarChar(30)
  productId Int

  product Product @relation(fields: [productId], references: [id])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sequence  Int
  image     String
  productId Int

  product Product @relation(fields: [productId], references: [id])
}

model ProductVariant {
  id                                           Int      @id @default(autoincrement())
  productId                                    Int
  name                                         String?
  SKU                                          String
  description                                  String?
  specification                                Json
  selling_price                                Float // actual selling price
  base_and_selling_price_difference_in_percent Float? // renamed from oldPrice
  stock                                        Int
  colour_code                                  String? // renamed from colourCode
  is_selected                                  Boolean  @default(false)
  is_active                                    Boolean  @default(true)
  is_new_arrival                               Boolean  @default(false)
  created_by                                   Int
  low_stock_threshold                          Int? // renamed from lowStockThreshold
  createdAt                                    DateTime @default(now())
  isDeleted                                    Boolean  @default(false)

  product            Product             @relation(fields: [productId], references: [id])
  images             VariantImage[]
  cartItems          CartItem[]
  orderItems         OrderItem[]
  abandonedCartItems AbandonedCartItem[]
}

model VariantImage {
  id              Int            @id @default(autoincrement())
  url             String
  publicId        String?
  createdAt       DateTime       @default(now())
  variantId       Int
  sequence_number Int
  is_active       Boolean        @default(true)
  variant         ProductVariant @relation(fields: [variantId], references: [id])
}

model Cart {
  id                       Int                @id @default(autoincrement())
  userId                   Int                @unique
  user                     User               @relation(fields: [userId], references: [id])
  items                    CartItem[]
  createdAt                DateTime           @default(now())
  updatedAt                DateTime           @updatedAt
  reminderCount            Int                @default(0)
  lastReminderAt           DateTime?
  discountCodes            DiscountCode[]
  couponRedemptions        CouponRedemption[]
  discountedAbandonedTotal Float?

  abandonedCartItems AbandonedCartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int?
  variantId Int?
  quantity  Int
  createdAt DateTime @default(now())

  cart    Cart            @relation(fields: [cartId], references: [id])
  product Product?        @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])
}

model Address {
  id          Int         @id @default(autoincrement())
  userId      Int
  type        AddressType @default(SHIPPING)
  fullName    String
  phone       String
  pincode     String
  state       String
  city        String
  addressLine String
  landmark    String?
  isDefault   Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  orders Order[]
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int
  totalAmount     Float
  finalAmount     Float?
  status          OrderStatus @default(PENDING)
  subtotal        Float?
  discountAmount  Float?
  discountCode    String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  paymentId       Int?        @unique
  addressId       Int?
  billingAddress  String?
  shippingAddress String?

  taxAmount      Float? // e.g., 45.23
  taxType        String? // "IGST" or "CGST+SGST"
  appliedTaxRate Float? // e.g., 18.0
  isTaxInclusive Boolean?

  shippingRate    Float?
  shippingCourier String?
  shippingETA     String?
  shipment        Shipment?

  abandentDiscountAmount Int?

  user             User               @relation(fields: [userId], references: [id])
  items            OrderItem[]
  payment          Payment?           @relation(fields: [paymentId], references: [id])
  address          Address?           @relation(fields: [addressId], references: [id])
  couponRedemption CouponRedemption[]
  isVisible        Boolean            @default(false)
  razorpayOrderId  String?            @unique
}

model OrderItem {
  id        Int   @id @default(autoincrement())
  orderId   Int
  productId Int?
  variantId Int?
  quantity  Int
  price     Float

  order   Order           @relation(fields: [orderId], references: [id])
  product Product?        @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])
}

model Payment {
  id            Int           @id @default(autoincrement())
  method        String
  status        PaymentStatus @default(PENDING)
  transactionId String?
  paidAt        DateTime?
  createdAt     DateTime      @default(now())

  order Order?
}

model DiscountCode {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  userId    Int
  cartId    Int?
  discount  Int
  used      Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User  @relation(fields: [userId], references: [id])
  cart Cart? @relation(fields: [cartId], references: [id])
}

model DiscountRule {
  id         Int      @id @default(autoincrement())
  percentage Int
  minItems   Int
  createdAt  DateTime @default(now())
}

model Notification {
  id        Int              @id @default(autoincrement())
  userId    Int
  message   String
  type      NotificationType @default(ORDER)
  isRead    Boolean          @default(false)
  createdAt DateTime         @default(now())

  user User @relation(fields: [userId], references: [id])
}

model header {
  id              Int      @id @default(autoincrement())
  sequence_number Int      @unique
  name            String
  link            String
  is_active       Boolean
  created_by      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model HomepageBanner {
  id              Int      @id @default(autoincrement())
  sequence_number Int      @unique
  heading         String
  subheading      String?
  subheading2     String? // optional second subheading
  buttonText      String?
  buttonLink      String?
  imageUrl        String? // optional: for background/banner image
  mobile_banner   String?
  publicId        String? // optional: for cloud storage reference
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isActive        Boolean  @default(true)
}

model CompanySettings {
  id              String  @id @default(uuid())
  country         String?
  currency        String?
  currency_symbol String?
  logo            String? // Optional logo
  address         String
  phone           String
  email           String
  description     String?

  facebook_icon  String? // Optional social icons/links
  facebook_link  String?
  instagram_icon String?
  instagram_link String?
  twitter_icon   String?
  twitter_link   String?
  linkedin_icon  String?
  linkedin_link  String?

  product_low_stock_threshold Int?
  minimum_order_quantity      Int?

  is_tax_inclusive Boolean @default(true) // Inclusive or Exclusive
  company_state    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  role        String
  image       String
  is_active   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model WhyChooseUsItem {
  id              Int      @id @default(autoincrement())
  sequence_number String
  heading         String
  description     String
  image           String? // storing the image URL here, field named `image`
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model GalleryType {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  isActive  Boolean       @default(true)
  galleries GalleryItem[] @relation("GalleryTypeToItems")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model GalleryItem {
  id              Int          @id @default(autoincrement())
  sequence_number String
  image           String
  is_active       Boolean      @default(true)
  section         String?
  type            GalleryType? @relation("GalleryTypeToItems", fields: [section], references: [name])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model NewsLetter {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}

model DashboardSetting {
  id        Int      @id @default(autoincrement())
  userId    Int
  key       String
  value     Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, key])
}

model ContactRequest {
  id                     Int      @id @default(autoincrement())
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  name                   String
  email                  String
  phone_number           String
  city                   String?
  state                  String?
  country                String?
  own_retail_space       Boolean?
  subject                String?
  message                String?
  contacted_the_customer Boolean  @default(false)
  reply_given            String?
  updated_by             String?
}

model CouponCode {
  id               Int      @id @default(autoincrement())
  name             String
  code             String   @unique
  discount         Int
  expiresAt        DateTime
  createdAt        DateTime @default(now())
  show_on_homepage Boolean  @default(false)
  redeemCount      Int      @default(0)
  maxRedeemCount   Int      @default(100)
  is_active        Boolean  @default(false)

  redemptions CouponRedemption[]
}

model CouponRedemption {
  id       Int        @id @default(autoincrement())
  couponId Int
  cartId   Int
  usedAt   DateTime   @default(now())
  orderId  Int?
  coupon   CouponCode @relation(fields: [couponId], references: [id])

  cart  Cart   @relation(fields: [cartId], references: [id])
  order Order? @relation(fields: [orderId], references: [id])

  @@unique([couponId, cartId])
}

model Pincode {
  id                    Int      @id @default(autoincrement())
  city                  String
  state                 String
  zipcode               Int      @unique
  estimatedDeliveryDays Int
  isActive              Boolean  @default(true)
  createdBy             String?
  updatedBy             String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model GoogleAnalytics {
  id             Int     @id @default(autoincrement())
  google_email   String
  tag            String
  measurement_id String
  is_active      Boolean @default(true)

  created_by String
  updated_by String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model HomepageStatistic {
  id        Int     @id @default(autoincrement())
  title     String
  number    Int
  is_active Boolean @default(true)

  created_by String
  updated_by String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductTag {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  is_active      Boolean         @default(true)
  created_by     String
  updated_by     String
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  products       Product[]       @relation("ProductTags")
  // Reverse relation
  blogs          frontend_blog[] @relation("BlogProductTag")
}

model Tax {
  id         Int      @id @default(autoincrement())
  name       String
  percentage Float
  is_active  Boolean  @default(true)
  created_by String
  updated_by String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ShippingService {
  id         Int      @id @default(autoincrement())
  name       String
  url        String?
  is_active  Boolean  @default(true)
  created_by String?
  created_at DateTime @default(now())
  updated_by String?
  updated_at DateTime @updatedAt

  // Aramex
  aramex_username       String?
  aramex_password       String?
  aramex_account_number String?
  aramex_account_pin    String?

  // Shiprocket
  shiprocket_username String?
  shiprocket_password String?
  shiprocket_token    String?

  // USPS
  usps_client_id     String?
  usps_client_secret String?

  start_date DateTime?
  end_date   DateTime?
}

model AboutUsSection {
  id              Int                @id @default(autoincrement())
  sequence_number Int
  section_name    String
  heading         String?
  sub_heading     String?
  description     String?
  image           String?
  is_active       Boolean            @default(true)
  created_by      String?
  created_at      DateTime           @default(now())
  updated_by      String?
  updated_at      DateTime           @updatedAt
  components      AboutUsComponent[]
}

model AboutUsComponent {
  id              Int            @id @default(autoincrement())
  sequence_number Int
  section         AboutUsSection @relation(fields: [sectionId], references: [id])
  sectionId       Int
  heading         String?
  sub_heading     String?
  description     String?
  image           String?
  is_active       Boolean        @default(true)
  precentage      String?
  created_by      String?
  updated_by      String?
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
}

model Store {
  id            Int      @id @default(autoincrement())
  name          String
  email         String?  @db.VarChar(255)
  phone_numbers String
  address       String
  locality      String?
  city          String
  state         String
  country       String
  zipcode       Int
  latitude      String
  longitude     String
  is_active     Boolean  @default(true)
  created_by    String?
  created_at    DateTime @default(now())
  updated_by    String?
  updated_at    DateTime @updatedAt
}

model AbandonedCartSetting {
  id                                Int      @id @default(autoincrement())
  hours_after_email_is_sent         Int
  discount_to_be_given_in_percent   Int
  hours_after_email_cart_is_emptied Int
  is_active                         Boolean  @default(true)
  created_by                        String?
  created_at                        DateTime @default(now())
  updated_by                        String?
  updated_at                        DateTime @updatedAt
}

model PaymentService {
  id        Int     @id @default(autoincrement())
  name      String
  url       String?
  is_active Boolean @default(true)

  created_by String?
  created_at DateTime @default(now())
  updated_by String?
  updated_at DateTime @updatedAt

  start_date DateTime?
  end_date   DateTime?

  // PayPal
  paypal_client_id String?
  paypal_secret    String?

  // Razorpay
  razorpay_key_id     String?
  razorpay_key_secret String?

  // Cashfree
  cashfree_client_id     String?
  cashfree_client_secret String?

  // Authorize.Net
  authorize_net_login_id        String?
  authorize_net_transaction_key String?

  // Stripe
  stripe_publishable_key String?
  stripe_secret_key      String?

  // Hyperpay
  hyperpay_entity_id    String?
  hyperpay_access_token String?
}

model Shipment {
  id                Int       @id @default(autoincrement())
  orderId           Int       @unique
  courierName       String
  awbCode           String    @unique
  trackingUrl       String?
  shipmentId        String? // Shiprocket shipment ID
  status            String? // e.g. "Picked Up", "In Transit"
  labelUrl          String? // PDF label URL
  estimatedDelivery DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  order Order @relation(fields: [orderId], references: [id])
}

model RazorpayWebhookLog {
  id         Int      @id @default(autoincrement())
  event      String
  orderId    String? // Razorpay Order ID
  payload    Json
  receivedAt DateTime @default(now())
  signature  String
  isValid    Boolean
}

model AbandonedCartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  userId    Int
  productId Int?
  variantId Int?
  quantity  Int
  discount  Int // percentage
  createdAt DateTime @default(now())

  cart    Cart            @relation(fields: [cartId], references: [id])
  user    User            @relation(fields: [userId], references: [id])
  product Product?        @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])
}

model ShippingRate {
  id               Int      @id @default(autoincrement())
  state            String   @unique // e.g., "Maharashtra"
  intra_state_rate Float // For orders within this state
  inter_state_rate Float // For orders outside this state
  is_active        Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model frontend_blog {
  id                   Int      @id @default(autoincrement())
  is_active            Boolean
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt
  title                String   @db.VarChar(100)
  slug                 String   @db.VarChar(150)
  content              String
  image                String?  @db.VarChar(100)
  created_by           String
  updated_by           String
  product_tag_id       Int?
  author               String   @db.VarChar(200)
  publish_date         DateTime @db.Date
  image_alternate_text String?  @db.VarChar(100)
  seo_metadata         String?
  seo_title            String   @db.VarChar(100)

  // Relations
  product_productTag   ProductTag? @relation("BlogProductTag", fields: [product_tag_id], references: [id])
  seofocuskeywordjoints frontend_blogandseofocuskeywordjoint[]
  tagjoints             frontend_blogandtagjoint[]
}

model frontend_blogandseofocuskeywordjoint {
  id         Int      @id @default(autoincrement())
  is_active  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  blog_id    Int
  keyword_id Int

  // Relations
  frontend_blog     frontend_blog                @relation(fields: [blog_id], references: [id])
  seo_focus_keyword frontend_blogseofocuskeyword @relation(fields: [keyword_id], references: [id])
}

model frontend_blogandtagjoint {
  id         Int      @id @default(autoincrement())
  is_active  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  blog_id    Int
  tag_id     Int

  // Relations
  frontend_blog    frontend_blog    @relation(fields: [blog_id], references: [id])
  frontend_blogtag frontend_blogtag @relation(fields: [tag_id], references: [id])
}

model frontend_blogseofocuskeyword {
  id         Int      @id @default(autoincrement())
  is_active  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String   @db.VarChar(100)
  created_by String
  updated_by String

  // Reverse Relation
  frontend_blogandseofocuskeywordjoint frontend_blogandseofocuskeywordjoint[]
}

model frontend_blogtag {
  id         Int      @id @default(autoincrement())
  is_active  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String   @db.VarChar(100)
  created_by String
  updated_by String

  // Reverse Relation
  frontend_blogandtagjoint frontend_blogandtagjoint[]
}
